
@{
    ViewBag.Title = "Chat";
}
@using System.Diagnostics
@using Ordering.Models
@model Ordering.Models.OrderModel
<h2>Order</h2>
@if (Model.IsAdmin)
{
    <div class="container">
        <input type="text" id="message" />
        <input type="button" id="sendmessage" value="Send" />
        
        <ul id="discussion">
        </ul>
    </div>
}
<div class="row">
    <table class="table table-bordered" id="orderTable">
        @foreach (var order in Model.OrderList)
        {
            <tr>
                <td>@order.ProductName</td>
                <td>@order.Price</td>
                <td>@order.Status</td>
                <td>@Html.ActionLink("Process","Process","Home",new{item=order})</td>
            </tr>
        }
    </table>

</div>
<div class="row">
    Denumire produs:
    <input type="text" id="name"/>
</div>
<div class="row">
    Pret:
    <input type="text" id="price" />
     <input type="button" id="sendOrder" value="Send" />
</div>


<script src="Scripts/jquery-1.6.4.min.js"></script>
       
        <script src="Scripts/jquery.signalR-2.1.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.--> 
    <script>
        $(function() {
            // Reference the auto-generated proxy for the hub.  
            var chat = $.connection.orderHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function(name, message) {
                // Add the message to the page. 
                $('#discussion').append('<li><strong>' + name
                    + '</strong>: ' + message + '</li>');
            };

            chat.client.addOrder = function(order) {
            
                $('#orderTable tr:last').after('<tr><td>' + order.ProductName + '</td><td>' + order.Price + '</td><td>' + order.Status + '</td>+</tr>');
           
            };
            // Get the user name and store it to prepend to messages.

            // Set initial focus to message input box.  
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function() {
                $('#sendmessage').click(function() {
                    // Call the Send method on the hub. 
                    chat.server.requestOrder($('#message').val());
                    // Clear text box and reset focus for next comment. 
                    $('#message').val('').focus();

                });
                $('#sendOrder').click(function() {
                    chat.server.sendOrder($('#name').val(), $('#price').val());
                });
            });
        });
    </script>
